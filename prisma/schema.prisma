datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = "native"
}

model Thread {
  body       String
  hash       String       @unique
  id         String       @id @default(auto()) @map("_id") @db.ObjectId
  parent     Thread?      @relation(name: "ParentThread", fields: [replyTo], references: [hash], onDelete: NoAction, onUpdate: NoAction)
  replies    Thread[]     @relation(name: "ParentThread")
  replyTo    String?
  signedBy   PublicKey    @relation(fields: [signedById], references: [keyId], onDelete: NoAction, onUpdate: NoAction)
  signedById String
  timestamp  DateTime
  policy     ThreadPolicy

  @@index([replyTo])
  @@index([signedById])
}

type ThreadPolicy {
  visible          Boolean  @default(true)
  acceptsReplies   Boolean  @default(true)
  encryptFor       String[]
  policyEditors    String[]
}

model PublicKey {
  armoredKey String          @unique
  comment    String
  email      String
  finger     String          @unique
  id         String          @id @default(auto()) @map("_id") @db.ObjectId
  keyId      String          @unique
  name       String
  threads    Thread[]
  policy     PublicKeyPolicy

  @@index([email])
  @@index([name])
}

type PublicKeyPolicy {
  revoked              Boolean @default(false)
  allowedToPost        Boolean @default(true)
  canStartThreads      Boolean @default(true)
  isMaster             Boolean @default(false)
}
